"""
Django settings for streams project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.utils.timezone import activate
from django.conf import settings
from decouple import config, Csv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = ['.thoughtsofminds.com', 'www.thoughtsofminds.com',]


# Application definition

INSTALLED_APPS = [
    'core.apps.CoreConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
    'tinymce',
    'django_elasticsearch_dsl'
]

ELASTICSEARCH_DSL={
    'default': {
        'hosts': 'localhost:9200'
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'streams.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'streams/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'streams.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('DB_NAME'),
        'USER' : config('DB_USER'),
        'PASSWORD' : config('DB_PASSWORD'),
        'HOST' : 'localhost',
        'PORT' : '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

TINYMCE_INCLUDE_JQUERY = True,
TINYMCE_ADDITIONAL_JS_URLS = None
TINYMCE_JS_URL = '//cdn.tinymce.com/4/tinymce.min.js'

TINYMCE_DEFAULT_CONFIG = {
    'height' : 700,
    'width' : '100%',
    'cleanup_on_startup' : True,
    'custom_undo_redo_levels' : 20,
    'selector' : 'textarea',
    'theme' : 'modern',
    'branding' : False,
    'plugins': '''
            textcolor save link image media preview codesample contextmenu
            table code lists fullscreen  insertdatetime  nonbreaking
            contextmenu directionality searchreplace wordcount visualblocks
            visualchars code fullscreen autolink lists  charmap print  hr
            anchor pagebreak
            ''',
    'toolbar1': '''
            fullscreen preview bold italic underline | fontselect,
            fontsizeselect  | forecolor backcolor | alignleft alignright |
            aligncenter alignjustify | indent outdent | bullist numlist table |
            | link image | codesample |
            ''',
    'toolbar2': '''
            visualblocks visualchars |
            charmap hr pagebreak nonbreaking anchor |  code |
            ''',
    'contextmenu': 'formats | link image',
    'menubar': False,
    'statusbar': True,
#    'automatic_uploads': True,
    'upload.maxsize': '100MB',
#    'file_picker_types' : 'image',
    'image_title': True,
    'image_caption': True,
    'images_upload_credentials' : True,
#    'file_browser_callback' :'mybrowser',
#    'file_browser_callback_types' :'image',

    'images_upload_url': 'http://127.0.0.1:8000/bookings/addpictures/69/',
}

TINYMCE_CALLBACKS = {
    'file_picker_callback' : '''function(cb, value, meta) {

        var div = document.getElementById("append-pic");
        var input = document.getElementById("id_picture");
        input.onchange = function() {
           var file = this.files[0];
           var reader = new FileReader();

           reader.onload = function () {
              var id = 'blobid' + (new Date()).getTime();
              var blobCache = tinymce.activeEditor.editorUpload.blobCache;
              var base64 = reader.result.split(',')[1];
              var blobInfo = blobCache.create(id, file, base64);
              blobCache.add(blobInfo);
              cb(blobInfo.blobUri(), { title: file.name });
           };
           reader.readAsDataURL(file);
        };
        input.click();
    }''',

    'images_upload_handler' : '''function(blobInfo, success, failure) {
        let xhr = new XMLHttpRequest();
        xhr.open('POST', 'https://thoughtsofminds.com/add_blog_pictures/');
        var indic = document.getElementById('image_indic');
        indic.style.display = "none";
        var load = document.getElementById('image_indic_close');
        load.style.display = "inherit";

        xhr.onload = function() {
           if (xhr.status !==200) {
               failure('HTTP Error: '+ xhr.status);
               return;
           }
           let json = JSON.parse(xhr.responseText);
           console.log(xhr.responseText);
           if (!json || typeof json.location !== 'string') {
               failure('Invalid JSON: ' +xhr.responseText);
               return
           }
           success(json.location);
           success(json.location);
           load.style.display = "none";
           indic.style.display = "inherit";
        };
        var form = document.getElementById('blog_pic_tiny')
        var inputs = form.querySelectorAll('input[type="file"]:not([disabled])')
        inputs.forEach(function(input) {
           if (input.files.length > 0) return
           input.setAttribute('disabled', '')
        })
        formData = new FormData(form);
        var pic = document.getElementById('id_picture')
        pic.value=''
        pk = document.getElementById('append-pic').getAttribute('args');
        formData.append('file', blobInfo.blob(), blobInfo.filename());
        formData.append('pk', pk);
        xhr.send(formData);
    }'''
}



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'streams-statics'
AWS_S3_ENDPOINT_URL = 'https://sfo2.digitaloceanspaces.com'
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'streams-statics'
AWS_QUERYSTRING_AUTH = False

STATIC_URL = 'https://%s/%s/' % (AWS_S3_ENDPOINT_URL, AWS_LOCATION)
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
DEFAULT_FILE_STORAGE = 'streams.storage_backends.MediaStorage'
AUTH_USER_MODEL = 'core.User'
LOGIN_REDIRECT_URL = 'core:home'
LOGIN_URL = 'core:home'
LOGOUT_REDIRECT_URL = 'core:home'

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True

EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'postmaster@mg.thoughtsofminds.com'
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Thoughtsofminds <noreply@thoughtsofminds.com>'
